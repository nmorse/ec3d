// @flow

const PID = require('./pid')
const Actor = require('./actor')
const Context = require('./context')
const Deferred = require('deferred')

module.exports = function spawn(
  fn      /*: (...args: Array<mixed>) => mixed | Promise<mixed> */,
  ...args /*: Array<mixed> */
) {
  const a = new Actor
  const d = new Deferred
  const pid = new PID(a, d);

  setTimeout(() => {
    let value
    try {
      value = fn.call(new Context(a), pid, ...args)
      d.resolve(value)
    } catch (err) {
      d.reject(err)
    }
  }, 0)

  return pid
}
